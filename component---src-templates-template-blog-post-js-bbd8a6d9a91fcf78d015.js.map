{"version":3,"sources":["webpack:///./src/templates/template-blog-post.js","webpack:///./src/components/HeaderGeneric.js","webpack:///./src/components/Counter.js"],"names":["renderAst","rehypeReact","createElement","React","components","interactive-counter","Counter","Compiler","BlogPostRoute","render","tags","tagsSection","post","this","props","data","markdownRemark","fields","tagSlugs","tagsArray","map","tag","i","divider","length","Glamor","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","frontmatter","css","fontStyle","textAlign","_layouts__WEBPACK_IMPORTED_MODULE_9__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","title","_components_HeaderGeneric__WEBPACK_IMPORTED_MODULE_10__","timeToRead","id","className","dangerouslySetInnerHTML","__html","tableOfContents","htmlAst","display","alignItems","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","alt","author","fixed","avatar","children","borderRadius","float","marginBottom","Tag","fontWeight","textTransform","bio","Component","pageQuery","__webpack_require__","HeaderGeneric","_ref","counterStyle","flexFlow","padding","backgroundColor","boxShadow","state","value","Number","_this","initialvalue","handleIncrement","setState","handleDecrement","style","flex","onClick","defaultProps"],"mappings":"gSAYMA,UAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,CAAEC,sBAAuBC,OACpCC,UAEGC,4FACJC,kBACE,IAEIC,EACAC,EAHEC,EAAOC,KAAKC,MAAMC,KAAKC,eAI7B,GAAIJ,EAAKK,OAAOC,SAAU,CACxB,IAAMC,EAAYP,EAAKK,OAAOC,SAC9BR,EAAOS,EAAUC,IAAI,SAACC,EAAKC,GACzB,IAAMC,EAAUD,EAAIH,EAAUK,OAAS,GAAKC,EAAAvB,cAAA,kBAC5C,OACEuB,EAAAvB,cAAA,QAAMwB,IAAKL,GACTI,EAAAvB,cAACyB,EAAA,KAAD,CAAMC,GAAIP,GAAMT,EAAKiB,YAAYnB,KAAKY,IACrCC,KAIPZ,EACEc,EAAAvB,cAAA,QACE4B,IAAK,CACHC,UAAS,SACTC,UAAS,SAHb,UAMUtB,GAKd,OACEe,EAAAvB,cAAC+B,EAAA,EAAD,KACER,EAAAvB,cAACgC,EAAAC,EAAD,CAAQC,MAAOxB,EAAKiB,YAAYO,QAChCX,EAAAvB,cAACmC,EAAA,EAAD,CAAeD,MAAOxB,EAAKiB,YAAYO,OACpCxB,EAAK0B,WADR,eACuC3B,GAGvCc,EAAAvB,cAAA,OAAKqC,GAAG,QACNd,EAAAvB,cAAA,WAASqC,GAAG,UAAUC,UAAU,QAC9Bf,EAAAvB,cAAA,sBACAuB,EAAAvB,cAAA,OACEuC,wBAAyB,CAAEC,OAAQ9B,EAAK+B,iBACxCH,UAAU,QAGXxC,EAAUY,EAAKgC,SAChBnB,EAAAvB,cAAA,MAAI4B,IAAK,KACTL,EAAAvB,cAAA,KACE4B,IAAK,CACHe,QAAO,OACPC,WAAU,WAGZrB,EAAAvB,cAAC6C,EAAAZ,EAAD,CACEa,IAAG,aAAepC,EAAKiB,YAAYoB,OAAOV,GAC1CW,MAAOtC,EAAKiB,YAAYoB,OAAOE,OAAOC,SAAS,GAAGF,MAClDpB,IAAK,CACHuB,aAAY,OACZC,MAAK,OACLC,aAAc,GAEhBC,IAAI,SAEN/B,EAAAvB,cAAA,QAAM4B,IAAK,IACTL,EAAAvB,cAAA,SACE4B,IAAK,CACH2B,WAAU,OACVC,cAAa,cAGd9C,EAAKiB,YAAYoB,OAAOV,IAP7B,IAUG3B,EAAKiB,YAAYoB,OAAOU,aAxEbxD,IAAMyD,WAkFnBpD,YAER,IAAMqD,EAAS,kECrGtB,SAAApC,GAAAqC,EAAA,GAWeC,IATO,SAAAC,GAAA,IAAG5B,EAAH4B,EAAG5B,MAAOgB,EAAVY,EAAUZ,SAAV,OACpB3B,EAAAvB,cAAA,UAAQqC,GAAG,UACRH,GACGX,EAAAvB,cAAA,UAAKkC,GAERgB,GAAY3B,EAAAvB,cAAA,SAAIkD,yICLfa,EAAe,CACnBpB,QAAO,OACPqB,SAAQ,aACRpB,WAAU,SACVqB,QAAO,cACPd,aAAY,MACZe,gBAAe,qBACfC,UAAS,0CAGU/D,sJAKnBgE,MAAQ,CACNC,MAAOC,OAAOC,EAAK3D,MAAM4D,iBAG3BC,gBAAkB,WAChBF,EAAKG,SAAS,SAAAN,GACZ,MAAO,CACLC,MAAOD,EAAMC,MAAQ,QAK3BM,gBAAkB,WAChBJ,EAAKG,SAAS,SAAAN,GACZ,MAAO,CACLC,MAAOD,EAAMC,MAAQ,oCAK3B9D,kBACE,OACEgB,EAAAvB,cAAA,QAAM4E,MAAOb,GACXxC,EAAAvB,cAAA,UAAQ4E,MAAO,CAAEC,KAAI,QAAYlE,KAAKyD,MAAMC,OAC5C9C,EAAAvB,cAAA,UAAQ8E,QAASnE,KAAKgE,iBAAtB,MACApD,EAAAvB,cAAA,UAAQ8E,QAASnE,KAAK8D,iBAAtB,kBA9B6BxE,EAAMyD,WAAtBtD,EACZ2E,aAAe,CACpBP,aAAc","file":"component---src-templates-template-blog-post-js-bbd8a6d9a91fcf78d015.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport rehypeReact from 'rehype-react';\n\nimport Counter from '../components/Counter';\nimport Layout from '../layouts';\nimport HeaderGeneric from '../components/HeaderGeneric'\n\nimport 'katex/dist/katex.min.css';\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { 'interactive-counter': Counter },\n}).Compiler;\n\nclass BlogPostRoute extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n\n    let tags;\n    let tagsSection;\n    if (post.fields.tagSlugs) {\n      const tagsArray = post.fields.tagSlugs;\n      tags = tagsArray.map((tag, i) => {\n        const divider = i < tagsArray.length - 1 && <span>{`, `}</span>;\n        return (\n          <span key={tag}>\n            <Link to={tag}>{post.frontmatter.tags[i]}</Link>\n            {divider}\n          </span>\n        );\n      });\n      tagsSection = (\n        <span\n          css={{\n            fontStyle: `normal`,\n            textAlign: `left`,\n          }}\n        >\n          tagged {tags}\n        </span>\n      );\n    }\n\n    return (\n      <Layout>\n        <Helmet title={post.frontmatter.title} />\n        <HeaderGeneric title={post.frontmatter.title}>\n          {post.timeToRead} min read &middot; {tagsSection}\n        </HeaderGeneric>\n\n        <div id=\"main\">\n          <section id=\"content\" className=\"main\">\n            <h2>Contents</h2>\n            <div\n              dangerouslySetInnerHTML={{ __html: post.tableOfContents }}\n              className=\"toc\"\n            />\n\n            {renderAst(post.htmlAst)}\n            <hr css={{}} />\n            <p\n              css={{\n                display: `flex`,\n                alignItems: `center`,\n              }}\n            >\n              <Img\n                alt={`Avatar of ${post.frontmatter.author.id}`}\n                fixed={post.frontmatter.author.avatar.children[0].fixed}\n                css={{\n                  borderRadius: `100%`,\n                  float: `left`,\n                  marginBottom: 0,\n                }}\n                Tag=\"span\"\n              />\n              <span css={{}}>\n                <small\n                  css={{\n                    fontWeight: `bold`,\n                    textTransform: `uppercase`,\n                  }}\n                >\n                  {post.frontmatter.author.id}\n                </small>\n                {` `}\n                {post.frontmatter.author.bio}\n              </span>\n            </p>\n          </section>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostRoute;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      timeToRead\n      tableOfContents\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fixed(width: 50, height: 50, quality: 75, grayscale: true) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nconst HeaderGeneric = ({ title, children }) => (\n  <header id=\"header\">\n    {title && (\n        <h1>{title}</h1>\n    )}\n    {children && <p>{children}</p>}\n  </header>\n);\n\nexport default HeaderGeneric;\n","import React from \"react\"\n\nconst counterStyle = {\n  display: `flex`,\n  flexFlow: `row nowrap`,\n  alignItems: `center`,\n  padding: `0.2em 0.4em`,\n  borderRadius: `2px`,\n  backgroundColor: `rgba(0, 0, 0, 0.2)`,\n  boxShadow: `inset 2px 1.5px 4px rgba(0, 0, 0, 0.2)`,\n}\n\nexport default class Counter extends React.Component {\n  static defaultProps = {\n    initialvalue: 0,\n  }\n\n  state = {\n    value: Number(this.props.initialvalue),\n  }\n\n  handleIncrement = () => {\n    this.setState(state => {\n      return {\n        value: state.value + 1,\n      }\n    })\n  }\n\n  handleDecrement = () => {\n    this.setState(state => {\n      return {\n        value: state.value - 1,\n      }\n    })\n  }\n\n  render() {\n    return (\n      <span style={counterStyle}>\n        <strong style={{ flex: `1 1` }}>{this.state.value}</strong>\n        <button onClick={this.handleDecrement}>-1</button>\n        <button onClick={this.handleIncrement}>+1</button>\n      </span>\n    )\n  }\n}\n"],"sourceRoot":""}