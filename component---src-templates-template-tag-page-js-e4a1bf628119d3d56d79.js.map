{"version":3,"sources":["webpack:///./src/templates/template-tag-page.js","webpack:///./src/components/HeaderGeneric.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","Glamor","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","frontmatter","title","totalCount","pageContext","tag","_layouts__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","a","_components_HeaderGeneric__WEBPACK_IMPORTED_MODULE_6__","id","className","React","Component","pageQuery","__webpack_require__","HeaderGeneric","_ref","children"],"mappings":"4OAMMA,4FACJC,kBACE,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,IAAI,SAAAC,GAAI,OAC9BC,EAAAC,cAAA,MAAIC,IAAKH,EAAKI,KAAKC,OAAOC,MACxBL,EAAAC,cAACK,EAAA,KAAD,CAAMC,GAAIR,EAAKI,KAAKC,OAAOC,MAAON,EAAKI,KAAKK,YAAYC,UAGtDA,EACJhB,KAAKC,MAAMC,KAAKC,kBAAkBc,WADzB,uBAEYjB,KAAKC,MAAMiB,YAAYC,IAFnC,IAGX,OACEZ,EAAAC,cAACY,EAAA,EAAD,KACEb,EAAAC,cAACa,EAAAC,EAAD,CAAQN,MAAOA,IACfT,EAAAC,cAACe,EAAA,EAAD,CAAeP,MAAOA,IACtBT,EAAAC,cAAA,OAAKgB,GAAG,QACNjB,EAAAC,cAAA,WAASgB,GAAG,UAAUC,UAAU,QAC9BlB,EAAAC,cAAA,UAAKT,GACLQ,EAAAC,cAAA,SACED,EAAAC,cAACK,EAAA,KAAD,CAAMC,GAAG,UAAT,oBACG,WApBMY,IAAMC,WA4Bd9B,YAER,IAAM+B,EAAS,iECpCtB,SAAArB,GAAAsB,EAAA,GAWeC,IATO,SAAAC,GAAA,IAAGf,EAAHe,EAAGf,MAAOgB,EAAVD,EAAUC,SAAV,OACpBzB,EAAAC,cAAA,UAAQgB,GAAG,UACRR,GACGT,EAAAC,cAAA,UAAKQ,GAERgB,GAAYzB,EAAAC,cAAA,SAAIwB","file":"component---src-templates-template-tag-page-js-e4a1bf628119d3d56d79.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../layouts';\nimport Helmet from 'react-helmet';\nimport HeaderGeneric from '../components/HeaderGeneric';\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>{post.node.frontmatter.title}</Link>\n      </li>\n    ));\n    const title = `${\n      this.props.data.allMarkdownRemark.totalCount\n    } posts tagged with “${this.props.pageContext.tag}”`;\n    return (\n      <Layout>\n        <Helmet title={title} />\n        <HeaderGeneric title={title} />\n        <div id=\"main\">\n          <section id=\"content\" className=\"main\">\n            <ul>{postLinks}</ul>\n            <p>\n              <Link to=\"/tags/\">Browse all tags</Link>\n            </p>{' '}\n          </section>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nconst HeaderGeneric = ({ title, children }) => (\n  <header id=\"header\">\n    {title && (\n        <h1>{title}</h1>\n    )}\n    {children && <p>{children}</p>}\n  </header>\n);\n\nexport default HeaderGeneric;\n"],"sourceRoot":""}